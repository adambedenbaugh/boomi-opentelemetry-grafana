version: "3.9"
services:
  # Boomi Runtime
  runtime:
    image: boomi/atom:release
    container_name: ${NODE_NAME}
    user: "1000:1000"
    restart: unless-stopped
    hostname: ${NODE_NAME}
    environment:
      BOOMI_ACCOUNTID: ${BOOMI_ACCOUNTID}
      BOOMI_ENVIRONMENTID: ${BOOMI_ENVIRONMENTID}
      INSTALL_TOKEN: ${INSTALL_TOKEN}
      BOOMI_ATOMNAME: ${ATOM_NAME}
      ATOM_LOCALHOSTID: ${NODE_NAME}
      LOCAL_PATH: "/opt/boomi"
      JAVA_OPTS: "-Xms2048m -Xmx4096m -Dboomi.containerized=true"
    ports:
      - "9090:9090"
      - "7800-7900:7800-7900"
      - "61717:61717"
    volumes:
      - ./boomi/local:/opt/boomi
      - ./boomi/share:/mnt/boomi
    networks:
      - otel_network

  # Alloy - Sink for Boomi OpenTelemetry data
  alloy:
    image: grafana/alloy:latest
    container_name: alloy
    restart: unless-stopped
    environment:
      HOSTNAME: alloy
      OBS_HOST: 172.31.19.58
    volumes:
      - ./alloy/alloy.yaml:/etc/alloy/config.alloy:ro
      - ./alloy:/var/lib/alloy/data
    command:
      - run
      - --storage.path=/var/lib/alloy/data
      - --server.http.listen-addr=0.0.0.0:12345
      - /etc/alloy/config.alloy
    networks:
      - otel_network
    ports:
      - "12345:12345"

  # Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    user: "1000:1000"
    restart: unless-stopped
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.retention.time=15d"
      - "--web.enable-remote-write-receiver"
    ports:
      - "9091:9090"
    networks:
      - observability

  # Loki
  loki:
    image: grafana/loki:latest
    container_name: loki
    restart: unless-stopped
    user: "1000:1000"
    volumes:
      - ./loki/loki.yml:/etc/loki/loki.yml:ro
      - ./loki:/var/loki
    command:
      - -config.expand-env=true
      - -config.file=/etc/loki/loki.yml
    ports:
      - "3100:3100"
    networks:
      - observability

  # Consul
  consul:
    image: hashicorp/consul:latest
    container_name: consul
    command: agent -server -bootstrap-expect=1 -data-dir=/consul/data -client=0.0.0.0
    ports:
      - "8500:8500"
    volumes:
      - ./consul:/consul/data
    networks:
      - observability

  # Tempo
  tempo:
    image: grafana/tempo:main-0230502
    container_name: tempo
    restart: unless-stopped
    user: "1000:1000"
    volumes:
      - ./tempo/tempo.yml:/etc/tempo/tempo.yml:ro
      - ./tempo:/var/tempo
    command: [ "-config.file=/etc/tempo/tempo.yml" ]
    ports:
      - "3200:3200"
      - "4317:4317"
      - "4318:4318"
    networks:
      - observability

  # Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    user: 1000:1000
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SERVER_HTTP_PORT=3000
    volumes:
      - ./grafana:/var/lib/grafana
    ports:
      - "3000:3000"
    networks:
      - observability
    depends_on:
      - prometheus
      - loki
      - tempo


networks:
  otel_network:
  observability:
    driver: bridge
